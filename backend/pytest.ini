[tool:pytest]
testpaths = tests
python_files = test_*.py *_test.py
python_classes = Test*
python_functions = test_*

# Coverage configuration
addopts = 
    --verbose
    --tb=short
    --strict-markers
    --strict-config
    --cov=.
    --cov-report=html:htmlcov
    --cov-report=term-missing
    --cov-report=xml:coverage.xml
    --cov-report=json:coverage.json
    --cov-fail-under=80
    --no-cov-on-fail
    --cov-branch
    --durations=10
    --maxfail=5

# Test markers
markers =
    unit: Unit tests - fast, isolated tests
    integration: Integration tests - test component interactions
    e2e: End-to-end tests - full system tests
    slow: Slow running tests (>5 seconds)
    fast: Fast running tests (<1 second)
    crew_ai: Tests that use CrewAI functionality
    database: Tests that require database connection
    api: API endpoint tests
    security: Security-related tests
    performance: Performance and load tests
    smoke: Smoke tests for basic functionality
    regression: Regression tests for known issues
    critical: Critical path tests that must always pass
    flaky: Tests that are known to be flaky
    requires_external: Tests requiring external services
    requires_openai: Tests requiring OpenAI API access
    requires_supabase: Tests requiring Supabase database

# Async test configuration
asyncio_mode = auto

# Warnings configuration
filterwarnings =
    ignore::UserWarning
    ignore::DeprecationWarning
    ignore::PendingDeprecationWarning
    ignore::RuntimeWarning:django.*
    error::UserWarning:tests.*

# Minimum Python version
minversion = 3.11

# Test timeout (in seconds)
timeout = 300

# Parallel execution
addopts_parallel = --numprocesses=auto

# Test discovery patterns
norecursedirs = 
    .git
    .tox
    dist
    build
    *.egg
    venv
    __pycache__
    node_modules

# Coverage configuration
[coverage:run]
source = .
omit = 
    */venv/*
    */tests/*
    */migrations/*
    */conftest.py
    */__init__.py
    */test_*.py
    */*_test.py
    */setup.py
    */manage.py
    */.tox/*
    */node_modules/*
    */htmlcov/*
    */.pytest_cache/*
    */dist/*
    */build/*

branch = True
parallel = True
concurrency = multiprocessing

[coverage:report]
precision = 2
show_missing = True
skip_covered = False
skip_empty = True

exclude_lines =
    pragma: no cover
    def __repr__
    if self.debug:
    if settings.DEBUG
    raise AssertionError
    raise NotImplementedError
    if 0:
    if False:
    if __name__ == .__main__.:
    class .*\bProtocol\):
    @(abc\.)?abstractmethod
    @overload
    # Type checking imports
    if TYPE_CHECKING:

[coverage:html]
directory = htmlcov
title = Baseball Trade AI - Test Coverage Report

[coverage:xml]
output = coverage.xml

[coverage:json]
output = coverage.json
pretty_print = True